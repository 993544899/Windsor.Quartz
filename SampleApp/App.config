<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor"/>
  </configSections>
  <castle>
    <facilities>
      <facility id="startable.facility" type="Castle.Facilities.Startable.StartableFacility, Castle.MicroKernel" />
    </facilities>
    <components>
      <component id="fileScanJob" type="Quartz.Job.FileScanJob, Quartz"/>
      <component id="globalJobListener" type="SampleApp.SampleJobListener, SampleApp">
        <parameters>
          <name>globalJobListener</name>
        </parameters>
      </component>
      <component id="sampleJobListener" type="SampleApp.SampleJobListener, SampleApp">
        <parameters>
          <name>sampleJobListener</name>
        </parameters>
      </component>
      <component id="globalTriggerListener" type="SampleApp.SampleTriggerListener, SampleApp">
        <parameters>
          <name>globalTriggerListener</name>
        </parameters>
      </component>
      <component id="sampleTriggerListener" type="SampleApp.SampleTriggerListener, SampleApp">
        <parameters>
          <name>sampleTriggerListener</name>
        </parameters>
      </component>
      <component id="sampleSchedulerListener" type="SampleApp.SampleSchedulerListener, SampleApp"/>
      <component id="sampleJob" type="SampleApp.SampleJob, SampleApp"/>
      <component id="scheduler"
                 service="Quartz.IScheduler, Quartz"
                 type="QuartzNetIntegration.QuartzNetScheduler, QuartzNetIntegration">
        <parameters>
          <SetGlobalJobListeners>
            <array>
              <item>${globalJobListener}</item>
            </array>
          </SetGlobalJobListeners>
          <SetGlobalTriggerListeners>
            <array>
              <item>${globalTriggerListener}</item>
            </array>
          </SetGlobalTriggerListeners>
          <SetSchedulerListeners>
            <array>
              <item>${sampleSchedulerListener}</item>
            </array>
          </SetSchedulerListeners>
          <!--jobListeners>
            <dictionary keyType="System.String, mscorlib" valueType="Quartz.IJobListener[], Quartz">
              <entry key="hello-world">
                <array>
                  <item>${sampleJobListener}</item>
                </array>
              </entry>
            </dictionary>
          </jobListeners>
          <triggerListeners>
            <dictionary keyType="System.String, mscorlib" valueType="Quartz.ITriggerListener[], Quartz">
              <entry key="sample-trigger">
                <array>
                  <item>${sampleTriggerListener}</item>
                </array>
              </entry>
            </dictionary>
          </triggerListeners-->
          <props>
            <dictionary>
              <entry key="quartz.scheduler.instanceName">XmlConfiguredInstance</entry>
              <entry key="quartz.threadPool.type">Quartz.Simpl.SimpleThreadPool, Quartz</entry>
              <entry key="quartz.threadPool.threadCount">5</entry>
              <entry key="quartz.threadPool.threadPriority">Normal</entry>
              <entry key="quartz.plugin.xml.type">Quartz.Plugin.Xml.JobInitializationPlugin, Quartz</entry>
              <entry key="quartz.plugin.xml.overwriteExistingJobs">true</entry>
              <entry key="quartz.plugin.xml.scanInterval">10</entry>
            </dictionary>
          </props>
        </parameters>
      </component>
      <component id="simpleScheduler"
                 service="QuartzNetIntegration.IJobScheduler, QuartzNetIntegration"
                 type="QuartzNetIntegration.QuartzNetSimpleScheduler, QuartzNetIntegration"/>
    </components>
  </castle>
</configuration>